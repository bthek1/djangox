[tool.poetry]
name = "djangox"
version = "0.1.0"
description = ""
authors = ["Benedict Thekkel <bthekkel1@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
django = "5.1.2"
asgiref = "3.8.1"
certifi = "2022.12.7"
charset-normalizer = "3.0.1"
crispy-bootstrap5 = "2024.10"
cryptography = "39.0.1"
defusedxml = "0.7.1"
django-allauth = "65.0.2"
django-crispy-forms = "2.3"
django-debug-toolbar = "4.4.6"
gunicorn = "23.0.0"
idna = "3.4"
oauthlib = "3.2.2"
packaging = "23.1"
psycopg = "3.2.3"
psycopg-binary = "3.2.3"
pycparser = "2.21"
pyjwt = "2.6.0"
python3-openid = "3.2.0"
requests = "2.28.2"
requests-oauthlib = "1.3.1"
sqlparse = "0.4.3"
typing-extensions = "4.9.0"
urllib3 = "1.26.14"
whitenoise = "6.7.0"
djangorestframework = "^3.15.2"
pytest = "^8.3.3"
pytest-django = "^4.9.0"
pytest-benchmark = "^5.1.0"
django-environ = "^0.11.2"
django-hijack = "^3.7.1"
black = "^24.10.0"
ruff = "^0.8.5"
django-extensions = "^3.2.3"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
addopts = "--capture=no" # show print statements
python_files = ["*test*.py","tests/*.py"]


[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
select = ["E", "F", "W"]  # Enable specific linting rules
ignore = ["W503"]         # Ignore specific rules
exclude = ["migrations", "__init__.py"]
line-length = 88          # Set maximum line length
fixable = ["F401", "E501"] # Rules that Ruff is allowed to fix